import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import Layout from '../components/layout'
import { Button, Card, Information } from '@web3uikit/core'
import { useWeb3Contract, useMoralis, useMoralisSubscription, useMoralisCloudFunction } from 'react-moralis'
import { Raffle, ContractAddresses } from '../constants'
import { useEffect, useState } from 'react'
import { ethers } from 'ethers'
import { Alert, Col, Container, Row } from 'react-bootstrap'
import { useNotification } from '@web3uikit/core'


export default function Home() {
  const { chainId: chainIdHex } = useMoralis()
  const [entranceFee, setEntranceFee] = useState("0")
  const [recentWinner, setRecentWinner] = useState("0x")
  const [numberOfPlayers, setNumberOfPlayers] = useState("0")


  const chainId = parseInt(chainIdHex)
  const raffleAddress = chainId in ContractAddresses ? ContractAddresses[chainId].at(-1) : null



  const { data: entranceFeeData, error: entranceFeeError, runContractFunction: getEntranceFee, isLoading: entranceFeeIsLoading } = useWeb3Contract({
    abi: Raffle,
    contractAddress: raffleAddress,
    functionName: "getEntranceFee",
    params: {}
  })
  const { data: numberOfPlayersWinnerData,
    error: numberOfPlayersError,
    runContractFunction: getNumberOfPlayers,
    isLoading: numberOfPlayersLoading } = useWeb3Contract({
      abi: Raffle,
      contractAddress: raffleAddress,
      functionName: "getNumberOfPlayers",
      params: {}
    })
  const { data: recentWinnerData,
    error: recentWinnerError,
    runContractFunction: getRecentWinner,
    isLoading: recentWinnerLoading } = useWeb3Contract({
      abi: Raffle,
      contractAddress: raffleAddress,
      functionName: "getRecentWinner",
      params: {}
    })

  const { data: enterRaffleData, error: enterRaffleError, runContractFunction: enterRaffle, isLoading: enterRaffleLoading } = useWeb3Contract({
    abi: Raffle,
    contractAddress: raffleAddress,
    functionName: "enterRaffle",
    params: {},
    msgValue: entranceFee,
  })
  const dispatch = useNotification()
  const handleEnterRaffleSuccess = () => {
    dispatch({
      type: 'info',
      message: 'you entered into raffle successfully.',
      title: 'Enter Raffle',
      position: 'topR',
    })
  }
  // const { data: eventData, } = useMoralisCloudFunction("watchContractEvent")
  const updateValue = async () => {
    const fee = await getEntranceFee()
    const winner = await getRecentWinner()
    const numberPlayers = await getNumberOfPlayers()
    setEntranceFee(fee)
    setRecentWinner(winner)
    setNumberOfPlayers(numberPlayers)
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container>
        <Row>
          <Col md={6}>
            <Card className="mt-3 mb-3">
              <Button text='get entrance fee' onClick={updateValue} disabled={entranceFeeIsLoading} />
              <Information className='mt-3' id='entrance-fee-info' topic='Entrance Fee' information={ethers.utils.formatUnits(entranceFee, "ether") + " eth"} />
              <Information className='mt-3' id='recent-winner-info' topic='Recent Winner' information={recentWinner} />
              <Information className='mt-3' id='number-players-info' topic='Number Of Players' information={parseInt(numberOfPlayers)} />
            </Card>
          </Col>
          <Col md={6}>
            <Card className="mt-3 mb-3">
              {enterRaffleError &&
                <Alert variant='danger' >{enterRaffleError}</Alert>
              }

              <Button text='Enter Raffle' onClick={() => enterRaffle({ onSuccess: handleEnterRaffleSuccess })} variant={'success'} disabled={enterRaffleLoading} />
              <Information
                className='mt-3'
                id='enter-raffle-info'
                topic='Enter Raffle Result'
                information={enterRaffleData && <pre>entered successfully.</pre>} />

            </Card>
          </Col>
        </Row>


      </Container>






    </div>
  )
}


Home.getLayout = function getLayout(page) {
  return (
    <Layout>
      {page}
    </Layout>
  )
}